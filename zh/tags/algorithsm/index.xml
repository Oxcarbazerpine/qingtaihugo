<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Algorithsm on 青苔博客</title><link>https://oxcarbazerpine.github.io/qingtaihugo/zh/tags/algorithsm/</link><description>Recent content in Algorithsm on 青苔博客</description><generator>Hugo -- 0.147.8</generator><language>zh</language><lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://oxcarbazerpine.github.io/qingtaihugo/zh/tags/algorithsm/index.xml" rel="self" type="application/rss+xml"/><item><title>Hash算法</title><link>https://oxcarbazerpine.github.io/qingtaihugo/zh/posts/%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate><guid>https://oxcarbazerpine.github.io/qingtaihugo/zh/posts/%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95/</guid><description>&lt;p>通过哈希方程将原始数据计算为一串定长的数字，（SHA-256算法就是256bits)，计算后的值称为哈希值（hash value or digest) ，哈希值不可逆，即无法通过哈希值反推出原始数据，并且就算原始数据只有微小的变化，算出的哈希值也与之前的完全不同，所以不易根据之前的值暴力破解。在实际运用中常用于比较，在我们输入密码后，密码先被算出它的哈希值，然后传输到服务器数据库，数据库里存的密码数据都是原始密码的哈希值，通过与用户传过来的哈希值比较来验证密码是否正确。&lt;/p>
&lt;p>在存储数据时，可以根据哈希方程创建一个哈希表用数据本身计算哈希值来作为表格的索引，计算方式如下：
如果数据是数字，可以用这个数字本身（或各位数字或每隔一定长度比如四位作为一小段，相加得到每一个部分相加的和），来mod表格长度取余数，得到索引，也就是这个数据在表格的坐标；如果数据是字符串，可以根据ASCii表转换成数字然后求和，继续刚才的算法。
冲突：
若两个数据计算出来的哈希值相同，就会发生冲突，这时后来的数据有几种处理方法：
open addressing(任何一个数据可以视情况占据表格的任何位置）
1.
Linear probing 依次向后查找空位
2.
Plus 3 rehash 隔三个空向后跳跃查找空位
3.
其余方法&lt;/p>
&lt;p>closed addressing
采用链式连接方式，通过已经占位的数据链接到新数据的位置。&lt;/p></description></item></channel></rss>