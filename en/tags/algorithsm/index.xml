<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Algorithsm on My Site</title><link>https://oxcarbazerpine.github.io/qingtaihugo/en/tags/algorithsm/</link><description>Recent content in Algorithsm on My Site</description><generator>Hugo -- 0.147.8</generator><language>en</language><lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://oxcarbazerpine.github.io/qingtaihugo/en/tags/algorithsm/index.xml" rel="self" type="application/rss+xml"/><item><title>Hash Algorithms Explained</title><link>https://oxcarbazerpine.github.io/qingtaihugo/en/posts/hash-algorithms-explained/</link><pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate><guid>https://oxcarbazerpine.github.io/qingtaihugo/en/posts/hash-algorithms-explained/</guid><description>&lt;p>The original data is calculated into a string of fixed-length numbers through a hash function, (such as SHA-256 algorithm which is 256 bits long), the calculated value is called a hash value (or digest). Hash values are irreversible, meaning that original data cannot be deduced from the hash value. Even if the original data changes slightly, the calculated hash value will be completely different from the previous one, making it hard to break violently according to the previous value. In practical applications, it&amp;rsquo;s often used for comparison. For instance, when we input a password, its hash value is calculated first and then transmitted to the server database. The password data stored in the database are all hash values of the original passwords, and a comparison with the hash value transmitted by the user verifies the correctness of the password.&lt;/p></description></item></channel></rss>